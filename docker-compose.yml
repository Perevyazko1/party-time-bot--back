version: "3.8"

services:

  pgdb:
    # Использование готового образа postgres
    image: postgres
    # Задание переменных окружения для контейнера с postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
    # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    networks:
      - network_party
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5
      timeout: 5s

  django-back:
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./PartyTimeBotBack/app
      dockerfile: Dockerfile
    volumes:
      - ./PartyTimeBotBack/app:/usr/src/app
      - ./PartyTimeBotBack/app/db.sqlite3:/usr/src/app/db.sqlite3
      - ./PartyTimeBotBack/app/static:/usr/src/app/static

    ports:
      - "8003:8003"
    restart: always
    networks:
      - network_party

  bot-party:
    environment:
      - TZ=Europe/Moscow
    build:
      context: ./bot
      dockerfile: Dockerfile
    networks:
      - network_party
    depends_on:
      - django-back
    restart: always



volumes:
  pgdbdata: null

networks:
  network_party:
    driver: bridge
